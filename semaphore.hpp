// /////////////////////////////////////////////////////////////////////////////
// Filename:        semmaphore.hpp
// Author:          Christopher Skorka
// Date Created:    25/09/2018
// Description:     Semaphore used to synchronise access to recources
// /////////////////////////////////////////////////////////////////////////////

// MACROS //////////////////////////////////////////////////////////////////////
#ifndef SEMAPHORES_H
#define SEMAPHORES_H

// INCLUDES ////////////////////////////////////////////////////////////////////
#include <pthread.h>

// TYPEDEFS ////////////////////////////////////////////////////////////////////
typedef enum {UNLOCKED, LOCKED} States;

// CLASS PROTOTYPES ////////////////////////////////////////////////////////////
class Semaphore{

    // VARIABLES ------------------------------------------
    
	pthread_mutex_t mutex;
	pthread_cond_t condition;
	int value;
    
    public:

    // FUNCTIONS ------------------------------------------

    Semaphore();

    void wait();

    void post();

};

// MACROS //////////////////////////////////////////////////////////////////////
#endif

// /////////////////////////////////////////////////////////////////////////////
// END OF FILE
// /////////////////////////////////////////////////////////////////////////////